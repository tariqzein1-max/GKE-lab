name: ci
on:
  push:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: gke-lab-474404
  REGION: us-central1
  AR_REPO: apps
  CLUSTER_NAME: gke-lab
  NAMESPACE: app
  IMAGE_NAME: hello
  # Tell kubectl/client-go to use the plugin
  USE_GKE_GCLOUD_AUTH_PLUGIN: "True"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # OIDC auth (no JSON key)
      - name: Auth to Google Cloud (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_DEPLOYER_SA }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # ðŸ”§ Install the GKE auth plugin (required by kubectl)
      - name: Install GKE gcloud auth plugin
        run: |
          if ! command -v gke-gcloud-auth-plugin >/dev/null 2>&1; then
            gcloud components install gke-gcloud-auth-plugin --quiet || true
          fi
          if ! command -v gke-gcloud-auth-plugin >/dev/null 2>&1; then
            # fallback via apt if components are unavailable
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates gnupg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
            curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
            sudo apt-get update
            sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
          fi
          gke-gcloud-auth-plugin --version || true

      - name: Who am I
        run: |
          gcloud config list
          gcloud auth list

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build & push image
        working-directory: app
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      # âœ… Fetch kube credentials (now that plugin is present)
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.REGION }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Create/ensure namespace
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl get ns "${{ env.NAMESPACE }}"

      - name: Render and apply manifests
        run: |
          sudo apt-get update && sudo apt-get install -y gettext-base
          echo "Using image: $IMAGE"
          envsubst < k8s/deployment.tmpl.yaml > k8s/deployment.yaml
          kubectl apply -n "${{ env.NAMESPACE }}" -f k8s/deployment.yaml
          kubectl apply -n "${{ env.NAMESPACE }}" -f k8s/service.yaml

      - name: Wait for rollout & show Service
        run: |
          kubectl rollout status deployment/hello -n "${{ env.NAMESPACE }}" --timeout=180s
          kubectl get deploy,po,svc -n "${{ env.NAMESPACE }}" -o wide
